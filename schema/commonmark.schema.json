{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://spec.myst.tools/json-schema/commonmark.schema.json",
  "description": "existing basic commonmark types for myst mdast - https://github.com/syntax-tree/mdast",
  "$defs": {
    "Paragraph": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "paragraph"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/PhrasingContent"
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "Heading": {
      "type": "object",
      "allOf": [
        {
          "required": ["depth"],
          "properties": {
            "type": {
              "const": "heading"
            },
            "depth": {
              "type": "integer",
              "minimum": 1,
              "maximum": 6
            },
            "enumerated": {
              "description": "count this heading for numbering based on kind, e.g. Section 2.4.1",
              "type": "boolean"
            },
            "enumerator": {
              "description": "resolved enumerated value for this heading",
              "type": "string"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/PhrasingContent"
              }
            },
            "identifier": {},
            "label": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" },
        { "$ref": "#/$defs/OptionalAssociation" }
      ]
    },
    "ThematicBreak": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "thematicBreak"
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Node" }
      ]
    },
    "Blockquote": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "blockquote"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/FlowContent"
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "List": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "list"
            },
            "ordered": {
              "description": "Is item order important or not?",
              "type": "boolean"
            },
            "start": {
              "description": "Starting number of ordered list",
              "type": "integer"
            },
            "spread": {
              "description": "One or more children are separated with a blank line from others",
              "type": "boolean"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/ListContent"
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "ListItem": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "listItem"
            },
            "spread": {
              "description": "One or more children are separated with a blank line from others",
              "type": "boolean"
            },
            "children": {
              "type": "array",
              "items": {
                "anyOf": [
                  { "$ref": "myst.schema.json#/$defs/PhrasingContent" },
                  { "$ref": "myst.schema.json#/$defs/FlowContent" }
                ]
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "HTML": {
      "description": "Fragment of raw HTML - does not need to be valid or complete",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "html"
            },
            "value": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Literal" }
      ]
    },
    "Code": {
      "description": "Block of preformatted text",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "code"
            },
            "lang": {
              "description": "language of the code",
              "type": "string"
            },
            "meta": {
              "description": "custom information relating to the node",
              "type": "string"
            },
            "class": {
              "description": "user-defined class for code block",
              "type": "string"
            },
            "showLineNumbers": {
              "type": "boolean"
            },
            "startingLineNumber": {
              "type": "integer",
              "minimum": 1
            },
            "emphasizeLines": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              }
            },
            "identifier": {},
            "label": {},
            "value": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        {
          "if": {
            "required": ["meta"]
          },
          "then": {
            "required": ["lang"]
          },
          "else": {}
        },
        {
          "if": {
            "required": ["startingLineNumber"]
          },
          "then": {
            "required": ["showLineNumbers"]
          },
          "else": {}
        },
        { "$ref": "#/$defs/OptionalAssociation" },
        { "$ref": "unist.schema.json#/$defs/Literal" }
      ]
    },
    "Definition": {
      "description": "Reference to a url resource",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "definition"
            },
            "identifier": {},
            "label": {},
            "url": {},
            "title": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "#/$defs/Association" },
        { "$ref": "#/$defs/Resource" },
        { "$ref": "unist.schema.json#/$defs/Node" }
      ]
    },
    "Text": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "text"
            },
            "value": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Literal" }
      ]
    },
    "Emphasis": {
      "description": "Stressed, italicized content",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "emphasis"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/PhrasingContent"
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "EmphasisStatic": {
      "description": "Stressed, italicized content, with static children; used when parent node requires static content",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "emphasisStatic"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "Strong": {
      "description": "Important, serious, urgent, bold content",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "strong"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/PhrasingContent"
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "StrongStatic": {
      "description": "Important, serious, urgent, bold content, with static children; used when parent node requires static content",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "strong"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
              }
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "InlineCode": {
      "description": "Fragment of code",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "inlineCode"
            },
            "value": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Literal" }
      ]
    },
    "Break": {
      "description": "Line break",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "break"
            },
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "unist.schema.json#/$defs/Node" }
      ]
    },
    "Link": {
      "description": "Hyperlink",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "link"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
              }
            },
            "url": {},
            "title": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "#/$defs/Resource" },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "Image": {
      "description": "Image hyperlink",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "image"
            },
            "class": {
              "description": "user-defined class for image",
              "type": "string"
            },
            "width": {
              "description": "image width in pixels or percentage",
              "type": "string"
            },
            "align": {
              "type": "string",
              "enum": ["left", "center", "right"]
            },
            "url": {},
            "title": {},
            "alt": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "#/$defs/Resource" },
        { "$ref": "#/$defs/Alternative" },
        { "$ref": "unist.schema.json#/$defs/Node" }
      ]
    },
    "LinkReference": {
      "description": "Hyperlink through association",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "linkReference"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "myst.schema.json#/$defs/StaticPhrasingContent"
              }
            },
            "referenceType": {},
            "identifier": {},
            "label": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "#/$defs/Reference" },
        { "$ref": "#/$defs/Association" },
        { "$ref": "unist.schema.json#/$defs/Parent" }
      ]
    },
    "ImageReference": {
      "description": "Image through association",
      "type": "object",
      "allOf": [
        {
          "properties": {
            "type": {
              "const": "imageReference"
            },
            "referenceType": {},
            "identifier": {},
            "label": {},
            "alt": {},
            "position": {},
            "data": {}
          },
          "additionalProperties": false
        },
        { "$ref": "#/$defs/Reference" },
        { "$ref": "#/$defs/Association" },
        { "$ref": "#/$defs/Alternative" },
        { "$ref": "unist.schema.json#/$defs/Node" }
      ]
    },
    "Resource": {
      "description": "Reference to external resource",
      "type": "object",
      "required": ["url"],
      "properties": {
        "url": {
          "type": "string",
          "description": "A Uniform Resource Locator (URL) to an external resource or link."
        },
        "title": {
          "description": "advisory information, e.g. for a tooltip",
          "type": "string"
        }
      }
    },
    "OptionalAssociation": {
      "description": "Internal relation from one node to another; not required by node",
      "type": "object",
      "properties": {
        "identifier": {
          "description": "identifier that may match another node; value is unparsed and must be normalized such that whitespace is collapsed to single space, initial/final space is trimmed, and case is folded",
          "type": "string"
        },
        "label": {
          "description": "node label; character escapes and references are parsed; may be normalized to a unique identifier",
          "type": "string"
        }
      }
    },
    "Association": {
      "description": "Internal relation from one node to another",
      "type": "object",
      "allOf": [
        {
          "required": ["identifier"],
          "properties": { "identifier": {} }
        },
        { "$ref": "#/$defs/OptionalAssociation" }
      ]
    },
    "Alternative": {
      "description": "Alternative description of image",
      "type": "object",
      "properties": {
        "alt": {
          "description": "field describing the image",
          "type": "string"
        }
      }
    },
    "Reference": {
      "description": "Marker associated to another node",
      "type": "object",
      "required": ["referenceType"],
      "properties": {
        "referenceType": {
          "description": "explicitness of the reference:\n`shortcut` - reference is implicit, identifier inferred\n`collapsed` - reference explicit, identifier inferred\n`full` - reference explicit, identifier explicit",
          "type": "string",
          "enum": ["shortcut", "collapsed", "full"]
        }
      }
    }
  }
}
